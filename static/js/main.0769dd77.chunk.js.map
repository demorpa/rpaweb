{"version":3,"sources":["components/pages/DashboardPage.js","components/pages/ProfilePage.js","components/pages/TablesPage.js","components/pages/MapsPage.js","components/pages/NotFoundPage.js","components/Routes.js","components/topNavigation.js","components/sideNavigation.js","App.js","registerServiceWorker.js","index.js","assets/mdb-react.png","assets/img-1.jpg"],"names":["DashboardPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClose","e","setState","open","handleSubmit","event","preventDefault","state","vertical","horizontal","react_default","a","createElement","className","Form_default","onSubmit","Group","controlId","bsSize","Label","Control","type","placeholder","Button_default","block","Snackbar_default","anchorOrigin","key","concat","onClose","ContentProps","aria-describedby","message","id","Component","ProfilePage","Fragment","mdbreact_esm","sm","md","lg","src","src1","sub","size","outline","color","xl","alt","overlay","href","icon","TablesPage","textWhite","striped","MapsPage","style","width","height","lib_default","defaultCenter","lat","lng","defaultZoom","options","mapTypeId","NotFoundPage","hieght","logo","Routes","Switch","Route","path","component","React","TopNavigation","collapse","onClick","toggle","dropdownOpen","light","expand","scrolling","isOpen","navbar","left","App","topNavigation","sideNavigation","components_Routes","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","BrowserRouter","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0769dd77.chunk.js","sourcesContent":["// import React from 'react';\n// import { MDBRow } from 'mdbreact';\n\n// const DashboardPage =  () => {\n//   return (\n//     <React.Fragment>\n      \n//     </React.Fragment>\n//   )\n// }\n\n// export default DashboardPage;\n\n    import React, { Component } from \"react\";\n    import Form from 'react-bootstrap/Form';\n    import Button from 'react-bootstrap/Button';\n    import Bootstrap from \"react-bootstrap\";\n    import Snackbar from '@material-ui/core/Snackbar';\n    import \"./Login.css\";\n\n    export default class DashboardPage extends Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          open: false,\n          vertical: 'center',\n          horizontal: 'center',\n        }\n        \n      }\n\n\n      handleClose = (e) => {\n        this.setState({open: false });\n      }\n      \n\n      handleSubmit = event => {\n        event.preventDefault();\n        this.setState({ open: true});\n      }\n\n      render() {\n        var open = this.state.open;\n        var vertical = this.state.vertical;\n        var horizontal = this.state.horizontal;\n        return (\n          <div className=\"DashboardPage\">\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group controlId=\"email\" bsSize=\"large\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Username\" />\n              </Form.Group>\n              <Form.Group controlId=\"password\" bsSize=\"large\">\n              <Form.Label>Password</Form.Label>\n                <Form.Control\n                  placeholder=\"Password\"\n                  type=\"password\"\n                />\n              </Form.Group>\n              <Button\n                block\n                bsSize=\"large\"\n                type=\"submit\"\n              >\n                Login\n              </Button>\n              <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                key={`${vertical},${horizontal}`}\n                open={open}\n                onClose={this.handleClose}\n                ContentProps={{\n                  'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">Login Successful</span>}\n              />\n            </Form>\n          </div>\n        );\n      }\n    }","import React from 'react'\nimport { MDBCard, MDBCol, MDBRow, MDBView, MDBMask, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardFooter, MDBBtn, MDBIcon } from 'mdbreact';\nimport src1 from '../../assets/img-1.jpg';\n\nconst ProfilePage =  () => {\n  return (\n    <React.Fragment>\n        <MDBRow className=\"justify-content-center\">\n        <MDBCol sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-5\">\n            <MDBCard>\n                <MDBCardImage className=\"img-fluid\" src={src1} />\n                <MDBCardBody>\n                    <MDBCardTitle className=\"text-center mb-2 font-bold\">Alice Mayer</MDBCardTitle>\n                    <MDBCardTitle sub className=\"text-center indigo-text mb-2 font-bold\">Photographer</MDBCardTitle>\n                    <MDBCardText>\n                        <strong className=\"mb-2\">About:</strong>\n                        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ratione perferendis quod animi dignissimos consectetur quibusdam numquam laboriosam, minus, provident...\n                    </MDBCardText>\n                    <div className=\"row justify-content-end pr-1\">\n                        <MDBBtn size=\"sm\" outline color=\"primary\">More...</MDBBtn>\n                    </div>\n                </MDBCardBody>\n            </MDBCard>\n        </MDBCol>\n        <MDBCol md=\"6\" lg=\"9\">\n        <section className=\"text-center pb-3\">\n          <MDBRow className=\"d-flex justify-content-center\">\n            <MDBCol lg=\"6\" xl=\"5\" className=\"mb-3\">\n              <MDBCard className=\"d-flex mb-5\">\n                <MDBView>\n                  <img src=\"https://mdbootstrap.com/img/Mockups/Horizontal/6-col/pro-profile-page.jpg\" alt=\"Project\" className=\"img-fluid\"/>\n                  <MDBMask overlay=\"white-slight\"/>\n                </MDBView>\n                <MDBCardBody>\n                  <MDBCardTitle className=\"font-bold mb-3\">\n                    <strong>Project name</strong>\n                  </MDBCardTitle>\n                  <MDBCardText>Some quick example text to build on the card title and make up the bulk of the card's content.</MDBCardText>\n                </MDBCardBody>\n                <MDBCardFooter className=\"links-light profile-card-footer\">\n                  <span className=\"right\">\n                    <a className=\"p-2\" href=\"#profile\">\n                      Live Preview\n                      <MDBIcon icon=\"image\" className=\"ml-1\"/>\n                    </a>\n                  </span>\n                </MDBCardFooter>\n              </MDBCard>\n            </MDBCol>\n            <MDBCol lg=\"6\" xl=\"5\" className=\"mb-3\">\n              <MDBCard className=\"d-flex mb-5\">\n                <MDBView>\n                  <img src=\"https://mdbootstrap.com/img/Mockups/Horizontal/6-col/pro-signup.jpg\" alt=\"Project\" className=\"img-fluid\"/>\n                  <MDBMask overlay=\"white-slight\"/>\n                </MDBView>\n                <MDBCardBody>\n                  <MDBCardTitle className=\"font-bold mb-3\">\n                    <strong>Project name</strong>\n                  </MDBCardTitle>\n                  <MDBCardText>Some quick example text to build on the card title and make up the bulk of the card's content.</MDBCardText>\n                </MDBCardBody>\n                <MDBCardFooter className=\"links-light profile-card-footer\">\n                  <span className=\"right\">\n                    <a className=\"p-2\" href=\"#profile\">\n                      Live Preview\n                      <MDBIcon icon=\"image\" className=\"ml-1\"/>\n                    </a>\n                  </span>\n                </MDBCardFooter>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow>\n          <MDBRow className=\"d-flex justify-content-center\">\n            <MDBCol lg=\"6\" xl=\"5\" className=\"mb-3\">\n              <MDBCard className=\"d-flex mb-5\">\n                <MDBView>\n                  <img src=\"https://mdbootstrap.com/img/Mockups/Horizontal/6-col/pro-profile-page.jpg\" alt=\"Project\" className=\"img-fluid\"/>\n                  <MDBMask overlay=\"white-slight\"/>\n                </MDBView>\n                <MDBCardBody>\n                  <MDBCardTitle className=\"font-bold mb-3\">\n                    <strong>Project name</strong>\n                  </MDBCardTitle>\n                  <MDBCardText>Some quick example text to build on the card title and make up the bulk of the card's content.</MDBCardText>\n                </MDBCardBody>\n                <MDBCardFooter className=\"links-light profile-card-footer\">\n                  <span className=\"right\">\n                    <a className=\"p-2\" href=\"#profile\">\n                      Live Preview\n                      <MDBIcon icon=\"image\" className=\"ml-1\"/>\n                    </a>\n                  </span>\n                </MDBCardFooter>\n              </MDBCard>\n            </MDBCol>\n            <MDBCol lg=\"6\" xl=\"5\" className=\"mb-3\">\n              <MDBCard className=\"d-flex mb-5\">\n                <view-wrapper>\n                  <img src=\"https://mdbootstrap.com/img/Mockups/Horizontal/6-col/pro-signup.jpg\" alt=\"Project\" className=\"img-fluid\"/>\n                  <MDBMask overlay=\"white-slight\"/>\n                </view-wrapper>\n                <MDBCardBody>\n                  <MDBCardTitle className=\"font-bold mb-3\">\n                    <strong>Project name</strong>\n                  </MDBCardTitle>\n                  <MDBCardText>Some quick example text to build on the card title and make up the bulk of the card's content.</MDBCardText>\n                </MDBCardBody>\n                <MDBCardFooter className=\"links-light profile-card-footer\">\n                  <span className=\"right\">\n                    <a className=\"p-2\" href=\"#profile\">\n                      Live Preview\n                      <MDBIcon icon=\"image\" className=\"ml-1\"/>\n                    </a>\n                  </span>\n                </MDBCardFooter>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow>\n        </section>\n      </MDBCol>\n    </MDBRow>\n    </React.Fragment>\n  );\n}\n\nexport default ProfilePage;","import React from 'react'\nimport { MDBRow, MDBCol, MDBView, MDBCard, MDBCardBody, MDBTable, MDBTableHead, MDBTableBody } from 'mdbreact';\n\nconst TablesPage =  () => {\n  return (\n    <>\n      <MDBRow>\n      <MDBCol md=\"12\">\n        <MDBCard className=\"mt-5\">\n          <MDBView className=\"gradient-card-header blue darken-2\">\n            <h4 className=\"h4-responsive text-white\">Basic tables</h4>\n          </MDBView>\n          <MDBCardBody>\n            <h3 className=\"mt-5 text-left\"><strong>Basic examples</strong></h3>\n            <p>Using the most basic table markup, here’s how .table-based tables look in Bootstrap. All table styles are inherited in Bootstrap 4, meaning any nested tables will be styled in the same manner as the parent.</p>\n            <MDBTable>\n              <MDBTableHead>\n                <tr>\n                  <th>#</th>\n                  <th>First</th>\n                  <th>Last</th>\n                  <th>Handle</th>\n                </tr>\n              </MDBTableHead>\n              <MDBTableBody>\n                <tr>\n                  <td>1</td>\n                  <td>Mark</td>\n                  <td>Otto</td>\n                  <td>@mdo</td>\n                </tr>\n                <tr>\n                  <td>2</td>\n                  <td>Jacob</td>\n                  <td>Thornton</td>\n                  <td>@fat</td>\n                </tr>\n                <tr>\n                  <td>3</td>\n                  <td>Larry</td>\n                  <td>the Bird</td>\n                  <td>@twitter</td>\n                </tr>\n              </MDBTableBody>\n            </MDBTable>\n            <h3 className=\"mt-5 text-left\"><strong>MDBTable head options</strong></h3>\n            <p>To change a background-color of thead (or any other element) use our color classes. If you are going to use a dark background you should also consider white text (to provide a proper contrast) by adding .text-white class.</p>\n            <MDBTable>\n              <MDBTableHead color=\"primary-color\" textWhite>\n                <tr>\n                  <th>#</th>\n                  <th>First</th>\n                  <th>Last</th>\n                  <th>Handle</th>\n                </tr>\n              </MDBTableHead>\n              <MDBTableBody>\n                <tr>\n                  <td>1</td>\n                  <td>Mark</td>\n                  <td>Otto</td>\n                  <td>@mdo</td>\n                </tr>\n                <tr>\n                  <td>2</td>\n                  <td>Jacob</td>\n                  <td>Thornton</td>\n                  <td>@fat</td>\n                </tr>\n                <tr>\n                  <td>3</td>\n                  <td>Larry</td>\n                  <td>the Bird</td>\n                  <td>@twitter</td>\n                </tr>\n              </MDBTableBody>\n            </MDBTable>\n            <MDBTable>\n              <MDBTableHead color=\"pink\">\n                <tr>\n                  <th>#</th>\n                  <th>First</th>\n                  <th>Last</th>\n                  <th>Handle</th>\n                </tr>\n              </MDBTableHead>\n              <MDBTableBody>\n                <tr>\n                  <td>1</td>\n                  <td>Mark</td>\n                  <td>Otto</td>\n                  <td>@mdo</td>\n                </tr>\n                <tr>\n                  <td>2</td>\n                  <td>Jacob</td>\n                  <td>Thornton</td>\n                  <td>@fat</td>\n                </tr>\n                <tr>\n                  <td>3</td>\n                  <td>Larry</td>\n                  <td>the Bird</td>\n                  <td>@twitter</td>\n                </tr>\n              </MDBTableBody>\n            </MDBTable>\n            <h3 className=\"mt-5 text-left\"><strong>Striped rows.</strong></h3>\n            <p>Use prop striped to add zebra-striping to any table row within the table body</p>\n            <MDBTable striped>\n              <MDBTableHead>\n                <tr>\n                  <th>#</th>\n                  <th>First</th>\n                  <th>Last</th>\n                  <th>Handle</th>\n                </tr>\n              </MDBTableHead>\n              <MDBTableBody>\n                <tr>\n                  <td>1</td>\n                  <td>Mark</td>\n                  <td>Otto</td>\n                  <td>@mdo</td>\n                </tr>\n                <tr>\n                  <td>2</td>\n                  <td>Jacob</td>\n                  <td>Thornton</td>\n                  <td>@fat</td>\n                </tr>\n                <tr>\n                  <td>3</td>\n                  <td>Larry</td>\n                  <td>the Bird</td>\n                  <td>@twitter</td>\n                </tr>\n              </MDBTableBody>\n            </MDBTable>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBCol>\n    </MDBRow>\n    </>\n  )\n}\n\nexport default TablesPage;","import React from 'react'\nimport { MDBCol, MDBRow, MDBCard, MDBCardBody, MDBView } from 'mdbreact';\nimport GoogleMapReact from 'google-map-react';\n\nconst MapsPage =  () => {\n  return (\n    <React.Fragment>\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <MDBCard className=\"mt-5\">\n              <MDBView className=\"gradient-card-header blue darken-2\">\n                <h4 className=\"h4-responsive text-white\">\n                  Regular map\n                </h4>\n              </MDBView>\n              <MDBCardBody style={{width: '100%', height: '300px'}} className=\"text-center\">\n                <GoogleMapReact\n                  defaultCenter={{lat: 10, lng: 10}}\n                  defaultZoom={7}\n                 />\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n          <MDBCol md=\"6\">\n            <MDBCard className=\"mt-5\">\n              <MDBView className=\"gradient-card-header blue darken-2\">\n                <h4 className=\"h4-responsive text-white\">\n                  Hybrid map\n                </h4>\n              </MDBView>\n              <MDBCardBody style={{width: '100%', height: '300px'}} className=\"text-center\">\n                <GoogleMapReact\n                    defaultCenter={{lat: 10, lng: 10}}\n                    defaultZoom={7}\n                    options = {{\n                      mapTypeId: 'hybrid'\n                    }}\n                  />\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <MDBCard className=\"mt-5\">\n              <MDBView className=\"gradient-card-header blue darken-2\">\n                <h4 className=\"h4-responsive text-white\">\n                Satellite map\n                </h4>\n              </MDBView>\n              <MDBCardBody style={{width: '100%', height: '300px'}} className=\"text-center\">\n                <GoogleMapReact\n                      defaultCenter={{lat: 10, lng: 10}}\n                      defaultZoom={7}\n                      options = {{\n                        mapTypeId: 'satellite'\n                      }}\n                    />\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n          <MDBCol md=\"6\">\n            <MDBCard className=\"mt-5\">\n              <MDBView className=\"gradient-card-header blue darken-2\">\n                <h4 className=\"h4-responsive text-white\">\n                  Terrain map\n                </h4>\n              </MDBView>\n              <MDBCardBody style={{width: '100%', height: '300px'}} className=\"text-center\">\n                <GoogleMapReact\n                        defaultCenter={{lat: 10, lng: 10}}\n                        defaultZoom={7}\n                        options = {{\n                          mapTypeId: 'terrain'\n                        }}\n                      />\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n    </React.Fragment>\n  )\n}\n\nexport default MapsPage;","import React from 'react'\nimport { MDBCol, MDBRow } from 'mdbreact';\nimport logo from \"../../assets/mdb-react.png\";\n\n\nconst NotFoundPage =  () => {\n  return (\n    <React.Fragment>\n      <div className=\"full\">\n        <MDBRow className=\"bad-gateway-row\">\n          <MDBCol md=\"8\">\n            <img alt=\"Error 404\" className=\"img-fluid\" hieght=\"20px\" src={logo}/>\n            <h2 className=\"h2-responsive mt-3 mb-2\">404. That's an error.</h2>\n            <h4>The requested URL was not found on this server.</h4>\n          </MDBCol>\n          <MDBCol md=\"4\">\n            <img alt=\"Error 404\" className=\"img-fluid\" src=\"https://mdbootstrap.com/img/Others/grafika404-bf.png\"/>\n          </MDBCol>\n        </MDBRow>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default NotFoundPage;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DashboardPage from './pages/DashboardPage';\nimport ProfilePage from './pages/ProfilePage';\nimport TablesPage from './pages/TablesPage';\nimport MapsPage from './pages/MapsPage';\nimport NotFoundPage from './pages/NotFoundPage';\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route path='/rpaweb' component={DashboardPage} />\n        // <Route path='/dashboard' component={DashboardPage} />\n        // <Route path='/profile' component={ProfilePage} />\n        // <Route path='/tables' component={TablesPage} />\n        // <Route path='/maps' component={MapsPage} />\n        // <Route path='/404' component={NotFoundPage} />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\n\nclass TopNavigation extends Component {\n    state = {\n        collapse: false\n    }\n\n    onClick = () => {\n        this.setState({\n            collapse: !this.state.collapse,\n        });\n    }\n\n    toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    render() {\n        return (\n            <MDBNavbar className=\"flexible-navbar\" light expand=\"md\" scrolling>\n                <MDBNavbarBrand href=\"/\">\n                    <strong>RPA</strong>\n                </MDBNavbarBrand>\n                <MDBNavbarToggler onClick = { this.onClick } />\n                <MDBCollapse isOpen = { this.state.collapse } navbar>\n                    <MDBNavbarNav left>\n                        \n                    </MDBNavbarNav>\n                </MDBCollapse>\n            </MDBNavbar>\n        );\n    }\n}\n\nexport default TopNavigation;","import React from 'react';\nimport logo from \"../assets/mdb-react.png\";\nimport { MDBListGroup, MDBListGroupItem, MDBIcon } from 'mdbreact';\nimport { NavLink } from 'react-router-dom';\n\nconst TopNavigation = () => {\n    return (\n        <div className=\"sidebar-fixed position-fixed\">\n            <a href=\"#!\" className=\"logo-wrapper waves-effect\">\n                <img alt=\"MDB React Logo\" className=\"img-fluid\" src={logo}/>\n            </a>\n            \n        </div>\n    );\n}\n\nexport default TopNavigation;","import React, { Component } from 'react';\nimport Routes from '../src/components/Routes';\nimport TopNavigation from './components/topNavigation';\nimport SideNavigation from './components/sideNavigation';\nimport Footer from './components/Footer';\nimport './index.css';\n\nclass App extends Component {\n  \n  render() {\n    return (\n        <div className=\"flexible-content\">\n          <TopNavigation />\n          <SideNavigation />\n          <main id=\"content\" className=\"p-5\">\n            <Routes />\n          </main>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/mdb-react.750b5338.png\";","module.exports = __webpack_public_path__ + \"static/media/img-1.d3e3273c.jpg\";"],"sourceRoot":""}